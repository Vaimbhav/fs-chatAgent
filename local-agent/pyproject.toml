[project]
name = "local-agent"
version = "0.2.2"
description = "Local RAG agent with FastAPI, LangGraph, SQLite, Chroma"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "six>=1.16.0",
    "chromadb>=0.4.22",
    "fastapi>=0.111",
    "aiosqlite>=0.20",
    "uvicorn>=0.30",
    "pydantic>=2.7",
    "sqlalchemy>=2.0",
    "chromadb>=0.5",
    "tiktoken>=0.7",
    # LangGraph + local dev server
    "langgraph>=0.2",
    "langgraph-cli[inmem]>=0.1.55",
    "langgraph-checkpoint-sqlite>=2.0.11",
    # LangChain core (interfaces)
    "langchain-core>=0.2",
    # HTTP, env, OpenAI client
    "httpx>=0.27",
    "requests>=2.32.4",
    "python-dotenv>=1.0",
    "openai>=1.35",
    # Parsers / readers
    "pypdf>=4.2",
    "python-docx>=1.1",
    "python-pptx>=0.6.23",
    "openpyxl>=3.1",
    "lxml>=4.9,<5", # <-- pin to 4.x for pptx/textract compatibility
    # --- Pins required by textract 1.6.5 ---
    "beautifulsoup4>=4.8,<4.9", # textract constraint
    "xlrd==1.2.0", # prefer textract for .doc/.ppt
    "python-multipart>=0.0.20",
]

[tool.uv]
package = true
dev-dependencies = [
    "pytest>=8",
    "pytest-cov>=5", # optional
    "pytest-asyncio>=0.23", # optional for async tests
    "reportlab>=4", # optional: only if you run the sample PDF test
]

[tool.pyright]
typeCheckingMode = "basic"

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
